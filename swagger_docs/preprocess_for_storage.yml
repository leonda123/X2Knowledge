tags:
  - name: 文档处理

parameters:
  - name: file
    in: formData
    type: file
    required: false
    description: Markdown文件，与text参数二选一提供
  - name: text
    in: formData
    type: string
    required: false
    description: Markdown文本内容，与file参数二选一提供
  - name: output_dir
    in: formData
    type: string
    required: false
    description: 输出目录路径，默认为app.config['STORAGE_FOLDER']
  - name: filename
    in: formData
    type: string
    required: false
    description: 输出文件名（不含扩展名），默认为原始文件名或时间戳
  - name: format
    in: formData
    type: string
    required: false
    enum: [json, csv, both]
    default: both
    description: 输出格式，可选json、csv或both（同时输出两种格式），默认为both

responses:
  200:
    description: 处理成功
    schema:
      type: object
      properties:
        json_path:
          type: string
          description: 生成的JSON文件路径（当format为json或both时返回）
        csv_path:
          type: string
          description: 生成的CSV文件路径（当format为csv或both时返回）
        qa_count:
          type: integer
          description: 生成的问答对数量
  400:
    description: 请求参数错误
    schema:
      type: object
      properties:
        error:
          type: string
          description: 错误信息
  500:
    description: 服务器内部错误
    schema:
      type: object
      properties:
        error:
          type: string
          description: 错误信息
        details:
          type: string
          description: 详细错误信息

consumes:
  - multipart/form-data
produces:
  - application/json

summary: 入库预处理：将Markdown处理为JSON和CSV格式
description: |-
  将Markdown文件或文本处理为JSON和CSV格式，用于知识库入库前的数据准备。
  
  处理规则：
  1. 将标题(#)收集为question，标题下的所有文本内容收集为answer，直到下一个标题的出现
  2. 如果是二级及以上标题，问题标题会拼接上级标题，格式为"{上级标题},{当前标题}"
  3. 只有包含内容的标题会被处理，空标题会被忽略
  
  输出的JSON格式：
  ```json
  [
    {
      "question": "标题文本",
      "answer": "标题下的内容文本"
    },
    ...
  ]
  ``` 